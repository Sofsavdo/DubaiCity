import { VercelRequest, VercelResponse } from '@vercel/node';
import { storage } from '../server/storage';
import { insertUserSchema } from '@shared/schema';
import crypto from 'crypto';

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '';
const BOT_USERNAME = process.env.BOT_USERNAME || 'DubaiCITY_robot';
const CHANNEL_URL = process.env.CHANNEL_URL || 'https://t.me/DubaiCity_live';
const WEBAPP_URL = process.env.WEBAPP_URL || 'https://dubai-city-lilac.vercel.app';

interface TelegramUpdate {
  update_id: number;
  message?: {
    message_id: number;
    from: {
      id: number;
      is_bot: boolean;
      first_name: string;
      last_name?: string;
      username?: string;
      language_code?: string;
    };
    chat: {
      id: number;
      first_name: string;
      last_name?: string;
      username?: string;
      type: string;
    };
    date: number;
    text?: string;
    entities?: Array<{
      offset: number;
      length: number;
      type: string;
    }>;
  };
}

interface TelegramUser {
  id: number;
  first_name: string;
  last_name?: string;
  username?: string;
  language_code?: string;
}

// Validate Telegram webhook data
function validateTelegramData(data: string, hash: string): boolean {
  const secret = crypto.createHash('sha256').update(BOT_TOKEN).digest();
  const calculatedHash = crypto.createHmac('sha256', secret).update(data).digest('hex');
  return calculatedHash === hash;
}

// Send message to Telegram
async function sendTelegramMessage(chatId: number, text: string, replyMarkup?: any) {
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
  
  const payload = {
    chat_id: chatId,
    text,
    parse_mode: 'HTML',
    reply_markup: replyMarkup,
  };
  
  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload),
    });
    
    return await response.json();
  } catch (error) {
    console.error('Error sending Telegram message:', error);
    throw error;
  }
}

// Handle /start command
async function handleStartCommand(user: TelegramUser, chatId: number, startParam?: string) {
  const messages = {
    uz: {
      welcome: `üèôÔ∏è <b>Dubai City</b>ga xush kelibsiz, ${user.first_name}!\n\nüí∞ Tangalar yig'ing va o'z imperiyangizni qurib chiqing!\n‚ö° Energiyadan foydalanib tangalar ishlab topingv\nüè¢ Bizneslar sotib oling va passiv daromad qiling\nüéÅ Har kungi sovg'alar va bonuslar\n\nüë• Do'stlaringizni taklif qiling va qo'shimcha bonuslar oling!`,
      button: "üéÆ O'yinni boshlash",
      channel: "üì¢ Kanalga obuna bo'ling",
      help: "‚ùì Yordam"
    },
    ru: {
      welcome: `üèôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Dubai City</b>, ${user.first_name}!\n\nüí∞ –°–æ–±–∏—Ä–∞–π—Ç–µ –º–æ–Ω–µ—Ç—ã –∏ —Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ—é –∏–º–ø–µ—Ä–∏—é!\n‚ö° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –º–æ–Ω–µ—Ç\nüè¢ –ü–æ–∫—É–ø–∞–π—Ç–µ –±–∏–∑–Ω–µ—Å—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥\nüéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∏ –±–æ–Ω—É—Å—ã\n\nüë• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã!`,
      button: "üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É",
      channel: "üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
      help: "‚ùì –ü–æ–º–æ—â—å"
    },
    en: {
      welcome: `üèôÔ∏è Welcome to <b>Dubai City</b>, ${user.first_name}!\n\nüí∞ Collect coins and build your empire!\n‚ö° Use energy to earn coins\nüè¢ Buy businesses and earn passive income\nüéÅ Daily rewards and bonuses\n\nüë• Invite friends and get extra bonuses!`,
      button: "üéÆ Start Game",
      channel: "üì¢ Join Channel",
      help: "‚ùì Help"
    }
  };
  
  const lang = user.language_code?.startsWith('uz') ? 'uz' : 
               user.language_code?.startsWith('ru') ? 'ru' : 'en';
  
  const msg = messages[lang];
  
  const keyboard = {
    inline_keyboard: [
      [
        {
          text: msg.button,
          web_app: { url: startParam ? `${WEBAPP_URL}?start=${startParam}` : WEBAPP_URL }
        }
      ],
      [
        {
          text: msg.channel,
          url: CHANNEL_URL
        },
        {
          text: msg.help,
          callback_data: 'help'
        }
      ]
    ]
  };
  
  // Create or update user in database
  try {
    let dbUser = await storage.getUserByTelegramId(user.id.toString());
    
    if (!dbUser) {
      // Create new user
      dbUser = await storage.createUser({
        telegramId: user.id.toString(),
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        languageCode: lang,
        referredBy: startParam,
        coins: startParam ? 3000 : 1000, // Bonus for referral
      });
      
      // Create initial game stats
      await storage.createGameStats({
        userId: dbUser.id,
        totalTaps: 0,
        totalCoinsEarned: 0,
        totalEnergyUsed: 0,
        playTimeMinutes: 0,
      });
      
      // Handle referral bonus
      if (startParam) {
        try {
          const referrer = await storage.getUserByTelegramId(startParam);
          if (referrer) {
            await storage.updateUser(referrer.id, {
              referralCount: referrer.referralCount + 1,
              referralEarnings: referrer.referralEarnings + 5000,
              coins: referrer.coins + 5000,
            });
            
            // Send referral bonus notification
            const referralMsg = lang === 'uz' 
              ? `üéâ Tabriklaymiz! ${user.first_name} sizning taklif linkingiz orqali o'yinga qo'shildi!\n\nüí∞ +5000 tanga bonusi olindi!`
              : lang === 'ru'
              ? `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ${user.first_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!\n\nüí∞ –ü–æ–ª—É—á–µ–Ω –±–æ–Ω—É—Å +5000 –º–æ–Ω–µ—Ç!`
              : `üéâ Congratulations! ${user.first_name} joined the game through your referral link!\n\nüí∞ +5000 coins bonus received!`;
            
            await sendTelegramMessage(referrer.telegramId, referralMsg);
          }
        } catch (error) {
          console.error('Error processing referral:', error);
        }
      }
    } else {
      // Update existing user
      await storage.updateUser(dbUser.id, {
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        languageCode: lang,
        lastActiveAt: new Date(),
      });
    }
  } catch (error) {
    console.error('Error handling user in database:', error);
  }
  
  await sendTelegramMessage(chatId, msg.welcome, keyboard);
}

// Handle help command
async function handleHelpCommand(user: TelegramUser, chatId: number) {
  const messages = {
    uz: {
      help: `‚ùì <b>Dubai City Yordam</b>\n\nüéÆ <b>O'yin haqida:</b>\n‚Ä¢ Tangalar yig'ish uchun building tugmasiga bosing\n‚Ä¢ Energiyangizni kuzatib turing\n‚Ä¢ Bizneslar sotib oling va passiv daromad qiling\n‚Ä¢ Har kun sovg'alar oling\n\nüí∞ <b>Tangalar:</b>\n‚Ä¢ Har bir bosish uchun tangalar olasiz\n‚Ä¢ Energiya sarflanadi\n‚Ä¢ Bizneslar sizga doimiy daromad beradi\n\nüë• <b>Referral:</b>\n‚Ä¢ Do'stlaringizni taklif qiling\n‚Ä¢ Har bir do'st uchun 5000 tanga\n‚Ä¢ Do'stingiz 2000 tanga bonus oladi\n\nüéÅ <b>Bonuslar:</b>\n‚Ä¢ Har kungi sovg'alar\n‚Ä¢ Vazifalarni bajarish\n‚Ä¢ Premium xususiyatlar\n\nüìû <b>Yordam:</b>\n‚Ä¢ Savol va takliflar: @DubaiCity_live`
    },
    ru: {
      help: `‚ùì <b>–ü–æ–º–æ—â—å Dubai City</b>\n\nüéÆ <b>–û–± –∏–≥—Ä–µ:</b>\n‚Ä¢ –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–¥–∞–Ω–∏–µ –¥–ª—è —Å–±–æ—Ä–∞ –º–æ–Ω–µ—Ç\n‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–µ–π —ç–Ω–µ—Ä–≥–∏–µ–π\n‚Ä¢ –ü–æ–∫—É–ø–∞–π—Ç–µ –±–∏–∑–Ω–µ—Å—ã –¥–ª—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞\n‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã\n\nüí∞ <b>–ú–æ–Ω–µ—Ç—ã:</b>\n‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –ø–æ–ª—É—á–∞–µ—Ç–µ –º–æ–Ω–µ—Ç—ã\n‚Ä¢ –¢—Ä–∞—Ç–∏—Ç—Å—è —ç–Ω–µ—Ä–≥–∏—è\n‚Ä¢ –ë–∏–∑–Ω–µ—Å—ã –¥–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –¥–æ—Ö–æ–¥\n\nüë• <b>–†–µ—Ñ–µ—Ä–∞–ª—ã:</b>\n‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π\n‚Ä¢ 5000 –º–æ–Ω–µ—Ç –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞\n‚Ä¢ –î—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç –±–æ–Ω—É—Å 2000 –º–æ–Ω–µ—Ç\n\nüéÅ <b>–ë–æ–Ω—É—Å—ã:</b>\n‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã\n‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π\n‚Ä¢ –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏\n\nüìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>\n‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: @DubaiCity_live`
    },
    en: {
      help: `‚ùì <b>Dubai City Help</b>\n\nüéÆ <b>About the game:</b>\n‚Ä¢ Tap the building to collect coins\n‚Ä¢ Watch your energy level\n‚Ä¢ Buy businesses for passive income\n‚Ä¢ Collect daily rewards\n\nüí∞ <b>Coins:</b>\n‚Ä¢ Each tap earns you coins\n‚Ä¢ Energy is consumed\n‚Ä¢ Businesses provide constant income\n\nüë• <b>Referrals:</b>\n‚Ä¢ Invite friends\n‚Ä¢ 5000 coins per friend\n‚Ä¢ Friend gets 2000 coins bonus\n\nüéÅ <b>Bonuses:</b>\n‚Ä¢ Daily rewards\n‚Ä¢ Task completion\n‚Ä¢ Premium features\n\nüìû <b>Support:</b>\n‚Ä¢ Questions and suggestions: @DubaiCity_live`
    }
  };
  
  const lang = user.language_code?.startsWith('uz') ? 'uz' : 
               user.language_code?.startsWith('ru') ? 'ru' : 'en';
  
  await sendTelegramMessage(chatId, messages[lang].help);
}

// Main webhook handler
export default async function handler(req: VercelRequest, res: VercelResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }
  
  try {
    const update: TelegramUpdate = req.body;
    
    if (!update.message) {
      return res.status(200).json({ ok: true });
    }
    
    const { message } = update;
    const user = message.from;
    const chatId = message.chat.id;
    const text = message.text || '';
    
    // Handle /start command
    if (text.startsWith('/start')) {
      const startParam = text.split(' ')[1]; // Get referral parameter
      await handleStartCommand(user, chatId, startParam);
    }
    // Handle /help command
    else if (text === '/help') {
      await handleHelpCommand(user, chatId);
    }
    // Handle /stats command
    else if (text === '/stats') {
      try {
        const dbUser = await storage.getUserByTelegramId(user.id.toString());
        if (dbUser) {
          const gameStats = await storage.getUserGameStats(dbUser.id);
          const statsMsg = `üìä <b>Your Statistics</b>\n\n` +
            `üí∞ Coins: ${dbUser.coins.toLocaleString()}\n` +
            `‚ö° Energy: ${dbUser.energy}/${dbUser.maxEnergy}\n` +
            `üèÜ Level: ${dbUser.level} (${dbUser.empireTitle})\n` +
            `üìà Experience: ${dbUser.experience.toLocaleString()}\n` +
            `üë• Referrals: ${dbUser.referralCount}\n` +
            `üéØ Total Taps: ${gameStats?.totalTaps || 0}\n` +
            `üíé Total Earned: ${gameStats?.totalCoinsEarned || 0}`;
          
          await sendTelegramMessage(chatId, statsMsg);
        }
      } catch (error) {
        console.error('Error getting stats:', error);
      }
    }
    // Handle /referral command
    else if (text === '/referral') {
      try {
        const dbUser = await storage.getUserByTelegramId(user.id.toString());
        if (dbUser) {
          const referralLink = `https://t.me/${BOT_USERNAME}?start=${dbUser.telegramId}`;
          const referralMsg = `üë• <b>Referral System</b>\n\n` +
            `üîó Your referral link:\n${referralLink}\n\n` +
            `üìä <b>Statistics:</b>\n` +
            `‚Ä¢ Invited friends: ${dbUser.referralCount}\n` +
            `‚Ä¢ Coins earned: ${dbUser.referralEarnings.toLocaleString()}\n\n` +
            `üí∞ <b>Rewards:</b>\n` +
            `‚Ä¢ You get 5000 coins per friend\n` +
            `‚Ä¢ Friend gets 2000 coins bonus\n\n` +
            `üì§ Share your link and earn more coins!`;
          
          const keyboard = {
            inline_keyboard: [
              [
                {
                  text: "üì§ Share Referral Link",
                  switch_inline_query: `Join me in Dubai City! üèôÔ∏è ${referralLink}`
                }
              ]
            ]
          };
          
          await sendTelegramMessage(chatId, referralMsg, keyboard);
        }
      } catch (error) {
        console.error('Error getting referral info:', error);
      }
    }
    // Default response for unknown commands
    else {
      const unknownMsg = user.language_code?.startsWith('uz') 
        ? "‚ùì Noma'lum buyruq. /help tugmasini bosing."
        : user.language_code?.startsWith('ru')
        ? "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–∂–º–∏—Ç–µ /help –¥–ª—è –ø–æ–º–æ—â–∏."
        : "‚ùì Unknown command. Press /help for assistance.";
      
      await sendTelegramMessage(chatId, unknownMsg);
    }
    
    res.status(200).json({ ok: true });
  } catch (error) {
    console.error('Error handling Telegram webhook:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
}
